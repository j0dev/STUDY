{"ast":null,"code":"import { useState, useCallback, useReducer } from 'react';\n\nfunction reducer(state, action) {\n  //CHANGE\n  switch (action.type) {\n    case 'CHANGE':\n      // console.log(...state)\n      return { ...state,\n        ...state.input,\n        [action.name]: action.value\n      };\n\n    case 'RESET':\n      console.log('reset');\n      console.log(...state.initialFrom);\n      return {} // state: initialFrom\n      // ...state,\n      ;\n\n    default:\n      break;\n  } //RESET\n\n} // function useInputs(initialFrom) {\n//     const [form, setFrom] = useState(initialFrom);\n//     const onChange = useCallback(e=> {\n//         const {name, value} = e.target;\n//         setFrom(form => ({ ...form, [name]: value}));\n//     }, [])\n//     const reset = useCallback(() => setFrom(initialFrom), [initialFrom])\n//     return [form, onChange, reset]\n// }\n\n\nfunction useInputs(initialFrom) {\n  const [state, dispatch] = useReducer(reducer, initialFrom);\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE',\n      name,\n      value\n    });\n  }, []);\n  const reset = useCallback(() => {\n    dispatch({\n      type: 'RESET',\n      name: '',\n      value: ''\n    });\n  });\n  return [state, onChange, reset];\n}\n\nexport default useInputs;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/useInputs.js"],"names":["useState","useCallback","useReducer","reducer","state","action","type","input","name","value","console","log","initialFrom","useInputs","dispatch","onChange","e","target","reset"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,QAAkD,OAAlD;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI;AAEA,aAAO,EACH,GAAGF,KADA;AAEH,WAAGA,KAAK,CAACG,KAFN;AAGH,SAACF,MAAM,CAACG,IAAR,GAAcH,MAAM,CAACI;AAHlB,OAAP;;AAMJ,SAAK,OAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAGP,KAAK,CAACQ,WAArB;AACA,aAAO,EAAP,CACI;AAGJ;AAJA;;AAQJ;AACI;AAtBR,GAF4B,CA0B5B;;AACH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,SAASC,SAAT,CAAmBD,WAAnB,EAA+B;AAC3B,QAAM,CAACR,KAAD,EAAQU,QAAR,IAAoBZ,UAAU,CAACC,OAAD,EAAUS,WAAV,CAApC;AACA,QAAMG,QAAQ,GAAGd,WAAW,CAACe,CAAC,IAAI;AAE9B,UAAM;AAACR,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBO,CAAC,CAACC,MAAxB;AAGAH,IAAAA,QAAQ,CAAC;AACLR,MAAAA,IAAI,EAAE,QADD;AAELE,MAAAA,IAFK;AAGLC,MAAAA;AAHK,KAAD,CAAR;AAKH,GAV2B,EAUzB,EAVyB,CAA5B;AAYA,QAAMS,KAAK,GAAGjB,WAAW,CAAC,MAAM;AAC5Ba,IAAAA,QAAQ,CAAC;AACLR,MAAAA,IAAI,EAAE,OADD;AAELE,MAAAA,IAAI,EAAE,EAFD;AAGLC,MAAAA,KAAK,EAAE;AAHF,KAAD,CAAR;AAOH,GARwB,CAAzB;AASA,SAAO,CAACL,KAAD,EAAQW,QAAR,EAAkBG,KAAlB,CAAP;AACH;;AAGD,eAAeL,SAAf","sourcesContent":["import { useState, useCallback, useReducer } from 'react'\n\n\nfunction reducer(state, action) {\n    //CHANGE\n    switch (action.type) {\n        case 'CHANGE':\n            // console.log(...state)\n            \n            return {\n                ...state,\n                ...state.input,\n                [action.name]:action.value\n            }\n            \n        case 'RESET':\n            console.log('reset');\n            console.log(...state.initialFrom);\n            return {\n                // state: initialFrom\n\n            }\n            // ...state,\n            \n\n    \n        default:\n            break;\n    }\n    //RESET\n}\n\n\n// function useInputs(initialFrom) {\n//     const [form, setFrom] = useState(initialFrom);\n//     const onChange = useCallback(e=> {\n//         const {name, value} = e.target;\n//         setFrom(form => ({ ...form, [name]: value}));\n//     }, [])\n//     const reset = useCallback(() => setFrom(initialFrom), [initialFrom])\n\n//     return [form, onChange, reset]\n// }\n\nfunction useInputs(initialFrom){\n    const [state, dispatch] = useReducer(reducer, initialFrom);\n    const onChange = useCallback(e => {\n        \n        const {name, value} = e.target;\n        \n        \n        dispatch({\n            type: 'CHANGE',\n            name,\n            value\n        })\n    }, [])\n\n    const reset = useCallback(() => {\n        dispatch({\n            type: 'RESET',\n            name: '',\n            value: ''\n            \n            \n        })\n    })\n    return [state, onChange, reset]\n}\n\n\nexport default useInputs"]},"metadata":{},"sourceType":"module"}