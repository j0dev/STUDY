{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/Counter.js\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleIncrease = () => {\n      this.setState({\n        counter: this.state.counter + 1\n      });\n    };\n\n    this.handleDecrease = () => {\n      this.setState({\n        counter: this.state.counter - 1\n      });\n    };\n\n    this.handleToggle = () => {\n      this.setState({\n        updateMe: { ...this.state.updateMe,\n          toggleMe: !this.state.updateMe.toggleMe\n        }\n      });\n    };\n\n    this.state = {\n      //class 에서는 state는 무조건 객체\n      counter: 0,\n      updateMe: {\n        toggleMe: false,\n        dontChangeMe: 1\n      }\n    }; // this.handleIncrease = this.handleIncrease.bind(this);\n    // this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, this.state.counter), React.createElement(\"button\", {\n      onClick: this.handleIncrease,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"+1\"), React.createElement(\"button\", {\n      onClick: this.handleDecrease,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"-1\"), React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"fixed: \", this.state.fixed));\n  }\n\n} // function reducer(state, action) {\n//   switch (action) {\n//     case 'INCEMENT':\n//       return state + 1\n//     case 'DECEMENT':\n//       return state - 1\n//     default:\n//       throw new Error('Unhandled action')\n//   }\n// }\n// function Counter () {\n//     const [number, dispatch] = useReducer(reducer, 0)\n//     const onIncrease = () => {\n//         console.log(number)\n//         dispatch({\n//           type: 'INCREMENT'\n//         })\n//     }\n//     const onDecrease = () => {\n//       dispatch({\n//         type: 'DECREMENT'\n//       })\n//     }\n//     return (\n//       <div>\n//         <h1>{number}</h1>\n//         <button onClick={onIncrease}>+1</button>\n//         <button onClick={onDecrease}>-1</button>\n//       </div>\n//     );\n// }\n\n\nexport default Counter;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/Counter.js"],"names":["React","Component","Counter","constructor","props","handleIncrease","setState","counter","state","handleDecrease","handleToggle","updateMe","toggleMe","dontChangeMe","render","fixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,cAfmB,GAeF,MAAM;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,GAAoB;AADjB,OAAd;AAGD,KAnBkB;;AAAA,SAoBnBE,cApBmB,GAoBF,MAAM;AACrB,WAAKH,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,GAAoB;AADjB,OAAd;AAGD,KAxBkB;;AAAA,SA0BnBG,YA1BmB,GA0BJ,MAAM;AACnB,WAAKJ,QAAL,CAAc;AACZK,QAAAA,QAAQ,EAAE,EACR,GAAG,KAAKH,KAAL,CAAWG,QADN;AAERC,UAAAA,QAAQ,EAAE,CAAC,KAAKJ,KAAL,CAAWG,QAAX,CAAoBC;AAFvB;AADE,OAAd;AAOD,KAlCkB;;AAEjB,SAAKJ,KAAL,GAAa;AACX;AAEAD,MAAAA,OAAO,EAAC,CAHG;AAIXI,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,KADF;AAERC,QAAAA,YAAY,EAAE;AAFN;AAJC,KAAb,CAFiB,CAWjB;AACA;AACD;;AAuBDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWD,OAAhB,CADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKF,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKI,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKD,KAAL,CAAWO,KAAtB,CAJF,CADF;AAQD;;AA/C6B,C,CAoDhC;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react'\n\n\nclass Counter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      //class 에서는 state는 무조건 객체\n\n      counter:0,\n      updateMe: {\n        toggleMe: false,\n        dontChangeMe: 1\n      }\n    };\n    // this.handleIncrease = this.handleIncrease.bind(this);\n    // this.handleDecrease = this.handleDecrease.bind(this);\n  }\n\n  handleIncrease = () => {\n    this.setState({\n      counter: this.state.counter +1\n    }) \n  }\n  handleDecrease = () => {\n    this.setState({\n      counter: this.state.counter -1\n    })\n  }\n\n  handleToggle = () => {\n    this.setState({\n      updateMe: {\n        ...this.state.updateMe,\n        toggleMe: !this.state.updateMe.toggleMe\n        \n      }\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>{this.state.counter}</h1>\n        <button onClick={this.handleIncrease}>+1</button>\n        <button onClick={this.handleDecrease}>-1</button>\n        <p>fixed: {this.state.fixed}</p>\n      </div>\n    );\n  }\n}\n\n\n\n// function reducer(state, action) {\n//   switch (action) {\n//     case 'INCEMENT':\n//       return state + 1\n\n//     case 'DECEMENT':\n//       return state - 1\n\n//     default:\n//       throw new Error('Unhandled action')\n\n//   }\n// }\n\n// function Counter () {\n\n//     const [number, dispatch] = useReducer(reducer, 0)\n\n\n//     const onIncrease = () => {\n//         console.log(number)\n//         dispatch({\n//           type: 'INCREMENT'\n//         })\n//     }\n\n//     const onDecrease = () => {\n        \n//       dispatch({\n//         type: 'DECREMENT'\n//       })\n//     }\n\n//     return (\n//       <div>\n//         <h1>{number}</h1>\n//         <button onClick={onIncrease}>+1</button>\n//         <button onClick={onDecrease}>-1</button>\n//       </div>\n//     );\n// }\n\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}