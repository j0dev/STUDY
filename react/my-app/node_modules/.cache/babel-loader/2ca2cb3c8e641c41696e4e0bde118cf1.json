{"ast":null,"code":"import { useState, useCallback, useReducer } from 'react';\n\nfunction reducer(state, action) {\n  //CHANGE\n  switch (action.type) {\n    case 'CHANGE':\n      console.log(...state.value);\n      return { ...state,\n        name: state.name,\n        value: state.value\n      };\n\n    case 'RESET':\n    default:\n      break;\n  } //RESET\n\n} // function useInputs(initialFrom) {\n//     const [form, setFrom] = useState(initialFrom);\n//     const onChange = useCallback(e=> {\n//         const {name, value} = e.target;\n//         setFrom(form => ({ ...form, [name]: value}));\n//     }, [])\n//     const reset = useCallback(() => setFrom(initialFrom), [initialFrom])\n//     return [form, onChange, reset]\n// }\n\n\nfunction useInputs(initialFrom) {\n  const [state, dispatch] = useReducer(reducer, initialFrom);\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE',\n      name,\n      value\n    });\n  }, []);\n  const reset = useCallback(() => {});\n  return [state, onChange, reset];\n}\n\nexport default useInputs;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/useInputs.js"],"names":["useState","useCallback","useReducer","reducer","state","action","type","console","log","value","name","useInputs","initialFrom","dispatch","onChange","e","target","reset"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,QAAkD,OAAlD;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAyBC,MAAzB,EAAiC;AAC7B;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAGJ,KAAK,CAACK,KAArB;AACA,aAAO,EACH,GAAGL,KADA;AAEHM,QAAAA,IAAI,EAAEN,KAAK,CAACM,IAFT;AAGHD,QAAAA,KAAK,EAAEL,KAAK,CAACK;AAHV,OAAP;;AAMJ,SAAK,OAAL;AAGA;AACI;AAbR,GAF6B,CAiB7B;;AACH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,SAASE,SAAT,CAAmBC,WAAnB,EAA+B;AAC3B,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBX,UAAU,CAACC,OAAD,EAAUS,WAAV,CAApC;AACA,QAAME,QAAQ,GAAGb,WAAW,CAACc,CAAC,IAAI;AAE9B,UAAM;AAACL,MAAAA,IAAD;AAAOD,MAAAA;AAAP,QAAgBM,CAAC,CAACC,MAAxB;AAGAH,IAAAA,QAAQ,CAAC;AACLP,MAAAA,IAAI,EAAE,QADD;AAELI,MAAAA,IAFK;AAGLD,MAAAA;AAHK,KAAD,CAAR;AAKH,GAV2B,EAUzB,EAVyB,CAA5B;AAYA,QAAMQ,KAAK,GAAGhB,WAAW,CAAC,MAAM,CAE/B,CAFwB,CAAzB;AAGA,SAAO,CAACG,KAAD,EAAQU,QAAR,EAAkBG,KAAlB,CAAP;AACH;;AAGD,eAAeN,SAAf","sourcesContent":["import { useState, useCallback, useReducer } from 'react'\n\n\nfunction reducer(state,  action) {\n    //CHANGE\n    switch (action.type) {\n        case 'CHANGE':\n            console.log(...state.value)\n            return {\n                ...state,\n                name: state.name,\n                value: state.value\n            }\n            \n        case 'RESET':\n\n    \n        default:\n            break;\n    }\n    //RESET\n}\n\n\n// function useInputs(initialFrom) {\n//     const [form, setFrom] = useState(initialFrom);\n//     const onChange = useCallback(e=> {\n//         const {name, value} = e.target;\n//         setFrom(form => ({ ...form, [name]: value}));\n//     }, [])\n//     const reset = useCallback(() => setFrom(initialFrom), [initialFrom])\n\n//     return [form, onChange, reset]\n// }\n\nfunction useInputs(initialFrom){\n    const [state, dispatch] = useReducer(reducer, initialFrom);\n    const onChange = useCallback(e => {\n        \n        const {name, value} = e.target;\n        \n        \n        dispatch({\n            type: 'CHANGE',\n            name,\n            value\n        })\n    }, [])\n\n    const reset = useCallback(() => {\n\n    })\n    return [state, onChange, reset]\n}\n\n\nexport default useInputs"]},"metadata":{},"sourceType":"module"}