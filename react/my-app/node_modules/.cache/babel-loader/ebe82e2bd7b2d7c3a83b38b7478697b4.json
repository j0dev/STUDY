{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/UserList.js\";\nimport React, { useContext } from 'react';\nimport { UserDispatch } from './App';\nconst User = React.memo(function User({\n  user\n}) {\n  const {\n    username,\n    email,\n    id,\n    active\n  } = user;\n  const dispatch = useContext(UserDispatch);\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(\"b\", {\n    onClick: () => dispatch({\n      type: 'TOGGLE_USER',\n      id\n    }),\n    style: {\n      color: active ? 'green' : 'black',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, username), \"\\xA0\", React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"(\", email, \")\"), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'REMOVE_USER',\n      id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"\\uC0AD\\uC81C\"));\n});\n\nfunction UserList({\n  users\n}) {\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, users.map(user => React.createElement(User, {\n    user: user,\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 30\n    }\n  })));\n}\n\nexport default React.memo(UserList, (prevProps, nextProps) => prevProps.users === nextProps.users);","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/UserList.js"],"names":["React","useContext","UserDispatch","User","memo","user","username","email","id","active","dispatch","type","color","cursor","UserList","users","map","prevProps","nextProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,OAA7B;AAGA,MAAMC,IAAI,GAAGH,KAAK,CAACI,IAAN,CAAW,SAASD,IAAT,CAAc;AAAEE,EAAAA;AAAF,CAAd,EAAuB;AAC3C,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,EAAlB;AAAsBC,IAAAA;AAAtB,MAAgCJ,IAAtC;AACA,QAAMK,QAAQ,GAAGT,UAAU,CAACC,YAAD,CAA3B;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC;AACpBC,MAAAA,IAAI,EAAG,aADa;AAEpBH,MAAAA;AAFoB,KAAD,CAD3B;AAMI,IAAA,KAAK,EAAE;AACHI,MAAAA,KAAK,EAAEH,MAAM,GAAG,OAAH,GAAa,OADvB;AAEHI,MAAAA,MAAM,EAAE;AAFL,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWKP,QAXL,CADJ,UAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACMC,KADN,MAfJ,EAkBI;AACI,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AACpBC,MAAAA,IAAI,EAAC,aADe;AAEpBH,MAAAA;AAFoB,KAAD,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBJ,CADJ;AA6BH,CAjCY,CAAb;;AAmCA,SAASM,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAGxB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,KAAK,CAACC,GAAN,CACIX,IAAI,IAAK,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,GAAG,EAAEA,IAAI,CAACG,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CAFR,CADJ;AAUH;;AAID,eAAeR,KAAK,CAACI,IAAN,CAAWU,QAAX,EAAqB,CAACG,SAAD,EAAYC,SAAZ,KAA0BD,SAAS,CAACF,KAAV,KAAoBG,SAAS,CAACH,KAA7E,CAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { UserDispatch } from './App';\n\n\nconst User = React.memo(function User({ user }){\n    const {username, email, id, active} = user;\n    const dispatch = useContext(UserDispatch);\n\n    return (\n        <div>\n            <b \n                onClick={() => dispatch({\n                    type:  'TOGGLE_USER',\n                    id\n                }\n                    )}\n                style={{\n                    color: active ? 'green' : 'black',\n                    cursor: 'pointer'\n                }}\n            >\n                {username}\n            </b>\n            &nbsp;\n            <span>\n                ({email})\n            </span>\n            <button\n                onClick={() => dispatch({\n                    type:'REMOVE_USER',\n                    id\n                })}\n            >\n                삭제\n            </button>\n        </div>\n    )\n})\n\nfunction UserList({ users }){\n    \n    \n    return (\n        <div>\n            {\n                users.map(\n                    user => (<User user={user} key={user.id}\n                        />)\n                )\n            }\n        </div>\n    )\n}\n\n\n\nexport default React.memo(UserList, (prevProps, nextProps) => prevProps.users === nextProps.users);"]},"metadata":{},"sourceType":"module"}