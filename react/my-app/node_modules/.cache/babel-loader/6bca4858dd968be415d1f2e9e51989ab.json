{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/App.js\";\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react'; // import Hello from \"./Hello\";\n// import Wrapper from './Wrapper';\n\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\nimport useInputs from './useInputs';\n\nfunction countActiveUsers(users) {\n  console.log('active userr counting...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  users: [{\n    id: 1,\n    username: \"j0dev\",\n    email: \"asdf@asdf.com\",\n    active: true\n  }, {\n    id: 2,\n    username: \"intadd\",\n    email: \"qwer@asdf.com\",\n    active: false\n  }, {\n    id: 3,\n    username: \"test\",\n    email: \"zxcv@asdf.com\",\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CREATE_USER':\n      return {\n        inputs: initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n\n    case 'TOGGLE_USER':\n      return { ...state,\n        users: state.users.map(user => user.id === action.id ? { ...user,\n          active: !user.active\n        } : user)\n      };\n\n    case 'REMOVE_USER':\n      return { ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n\n    default:\n      throw new Error('Unhandled action');\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [form, onChange, reset] = useInputs({\n    username: '',\n    email: ''\n  });\n  const [username, email] = form;\n  const nextId = useRef(4);\n  const {\n    users\n  } = state;\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current += 1;\n    reset();\n  }, [username, email, reset]);\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE_USER',\n      id\n    });\n  }, []);\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    });\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return React.createElement(React.Fragment, null, React.createElement(CreateUser, {\n    username: username,\n    email: email,\n    onChange: onChange,\n    onCreate: onCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }), React.createElement(UserList, {\n    users: users,\n    onToggle: onToggle,\n    onRemove: onRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }), React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"\\uD65C\\uC131 \\uC0AC\\u314F\\uC6A9\\uC790 \\uC218: \", count));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","UserList","CreateUser","useInputs","countActiveUsers","users","console","log","filter","user","active","length","initialState","id","username","email","reducer","state","action","type","inputs","concat","map","Error","App","dispatch","form","onChange","reset","nextId","onCreate","current","onToggle","onRemove","count"],"mappings":"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","sourcesContent":["import React, {useRef, useReducer, useMemo, useCallback} from 'react';\n// import Hello from \"./Hello\";\n// import Wrapper from './Wrapper';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\nimport useInputs from './useInputs';\n\n\n\n\n\nfunction countActiveUsers(users) {\n  console.log('active userr counting...');\n  return users.filter(user => user.active).length;\n}\n\n\nconst initialState = {\n  \n  users: [{\n      id: 1,\n      username: \"j0dev\",\n      email: \"asdf@asdf.com\",\n      active: true\n    },\n      {\n    id: 2,\n      username: \"intadd\",\n        email: \"qwer@asdf.com\",\n          active: false\n  },\n  {\n    id: 3,\n      username: \"test\",\n        email: \"zxcv@asdf.com\",\n          active: false\n  }]\n}\n\n\nfunction reducer(state, action){\n  \n  switch (action.type) {\n    case 'CREATE_USER':\n      return {\n        inputs: initialState.inputs,\n        users: state.users.concat(action.user)\n      }\n    case 'TOGGLE_USER':\n      return {\n        ...state,\n        users: state.users.map(user => \n          user.id === action.id\n          ? {...user, active: !user.active}\n          : user\n          )\n      }\n\n    case 'REMOVE_USER':\n      return {\n        ...state,\n        users: state.users.filter(user =>user.id !== action.id)\n      }\n    default:\n      throw new Error('Unhandled action');\n    \n  }\n}\n\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const [form, onChange, reset] = useInputs({\n    username: '',\n    email: '',\n  });\n  const [username, email] = form;\n  const nextId = useRef(4);\n  const { users } = state;\n  \n \n  \n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email,\n      }\n    })\n    nextId.current += 1\n    reset();\n  }, [username, email, reset])\n\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE_USER',\n      id\n    })\n  }, []);\n\n  const onRemove  = useCallback(id => {\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    })\n  }, []);\n\n  const count = useMemo(() => countActiveUsers(users), [users])\n\n  \n  return (\n\n    <>\n    <CreateUser\n      username={username}\n      email = {email}\n      onChange={onChange}\n        onCreate={onCreate}\n        \n      />\n    <UserList users = {users}\n        onToggle={onToggle}\n        onRemove={onRemove} />\n      <div>활성 사ㅏ용자 수: {count}</div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}