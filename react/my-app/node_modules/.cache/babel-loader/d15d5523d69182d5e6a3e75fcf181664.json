{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/UserList.js\";\nimport React from 'react';\nconst User = React.memo(function User({\n  user,\n  onRemove,\n  onToggle\n}) {\n  const {\n    username,\n    email,\n    id,\n    active\n  } = user;\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, React.createElement(\"b\", {\n    onClick: () => onToggle(id),\n    style: {\n      color: active ? 'green' : 'black',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, username), \"\\xA0\", React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"(\", email, \")\"), React.createElement(\"button\", {\n    onClick: () => onRemove(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"\\uC0AD\\uC81C\"));\n});\n\nfunction UserList({\n  users,\n  onRemove,\n  onToggle\n}) {\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, users.map(user => React.createElement(User, {\n    user: user,\n    key: user.id,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 30\n    }\n  })));\n}\n\nexport default React.memo(UserList, (prevProps, nextProps) => prevProps.users === nextProps.users);","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/UserList.js"],"names":["React","User","memo","user","onRemove","onToggle","username","email","id","active","color","cursor","UserList","users","map","prevProps","nextProps"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;AAEA,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAW,SAASD,IAAT,CAAc;AAAEE,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAd,EAA2C;AAC/D,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,EAAlB;AAAsBC,IAAAA;AAAtB,MAAgCN,IAAtC;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,OAAO,EAAE,MAAME,QAAQ,CAACG,EAAD,CAD3B;AAEI,IAAA,KAAK,EAAE;AACHE,MAAAA,KAAK,EAAED,MAAM,GAAG,OAAH,GAAa,OADvB;AAEHE,MAAAA,MAAM,EAAE;AAFL,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKL,QAPL,CADJ,UAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACMC,KADN,MAXJ,EAcI;AACI,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAACI,EAAD,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ,CADJ;AAsBH,CAzBY,CAAb;;AA2BA,SAASI,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAAST,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAlB,EAAgD;AAG5C,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQQ,KAAK,CAACC,GAAN,CACIX,IAAI,IAAK,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,GAAG,EAAEA,IAAI,CAACK,EAA5B;AACL,IAAA,QAAQ,EAAEJ,QADL;AACe,IAAA,QAAQ,EAAEC,QADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CAFR,CADJ;AAUH;;AAID,eAAeL,KAAK,CAACE,IAAN,CAAWU,QAAX,EAAqB,CAACG,SAAD,EAAYC,SAAZ,KAA0BD,SAAS,CAACF,KAAV,KAAoBG,SAAS,CAACH,KAA7E,CAAf","sourcesContent":["import React, {  } from 'react';\n\nconst User = React.memo(function User({ user, onRemove, onToggle }){\n    const {username, email, id, active} = user;\n\n    return (\n        <div>\n            <b\n                onClick={() => onToggle(id)}\n                style={{\n                    color: active ? 'green' : 'black',\n                    cursor: 'pointer'\n                }}\n            >\n                {username}\n            </b>\n            &nbsp;\n            <span>\n                ({email})\n            </span>\n            <button\n                onClick={() => onRemove(id)}\n            >\n                삭제\n            </button>\n        </div>\n    )\n})\n\nfunction UserList({ users, onRemove, onToggle }){\n    \n    \n    return (\n        <div>\n            {\n                users.map(\n                    user => (<User user={user} key={user.id}\n                        onRemove={onRemove} onToggle={onToggle}/>)\n                )\n            }\n        </div>\n    )\n}\n\n\n\nexport default React.memo(UserList, (prevProps, nextProps) => prevProps.users === nextProps.users);"]},"metadata":{},"sourceType":"module"}