{"ast":null,"code":"import { useState, useCallback, useReducer } from 'react';\n\nfunction reducer(state, action) {\n  //CHANGE\n  switch (action.type) {\n    case 'CHANGE':\n      // console.log(...state)\n      console.log(action.value);\n      return { ...state,\n        initialFrom: { ...state.input,\n          [action.name]: action.value\n        }\n      };\n\n    case 'RESET':\n    default:\n      break;\n  } //RESET\n\n} // function useInputs(initialFrom) {\n//     const [form, setFrom] = useState(initialFrom);\n//     const onChange = useCallback(e=> {\n//         const {name, value} = e.target;\n//         setFrom(form => ({ ...form, [name]: value}));\n//     }, [])\n//     const reset = useCallback(() => setFrom(initialFrom), [initialFrom])\n//     return [form, onChange, reset]\n// }\n\n\nfunction useInputs(initialFrom) {\n  const [state, dispatch] = useReducer(reducer, initialFrom);\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE',\n      name,\n      value\n    });\n  }, []);\n  const reset = useCallback(() => {});\n  return [state, onChange, reset];\n}\n\nexport default useInputs;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/useInputs.js"],"names":["useState","useCallback","useReducer","reducer","state","action","type","console","log","value","initialFrom","input","name","useInputs","dispatch","onChange","e","target","reset"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,QAAkD,OAAlD;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB;AACA,aAAO,EACH,GAAGL,KADA;AAEHM,QAAAA,WAAW,EAAE,EACT,GAAGN,KAAK,CAACO,KADA;AAET,WAACN,MAAM,CAACO,IAAR,GAAcP,MAAM,CAACI;AAFZ;AAFV,OAAP;;AASJ,SAAK,OAAL;AAGA;AACI;AAjBR,GAF4B,CAqB5B;;AACH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,SAASI,SAAT,CAAmBH,WAAnB,EAA+B;AAC3B,QAAM,CAACN,KAAD,EAAQU,QAAR,IAAoBZ,UAAU,CAACC,OAAD,EAAUO,WAAV,CAApC;AACA,QAAMK,QAAQ,GAAGd,WAAW,CAACe,CAAC,IAAI;AAE9B,UAAM;AAACJ,MAAAA,IAAD;AAAOH,MAAAA;AAAP,QAAgBO,CAAC,CAACC,MAAxB;AAGAH,IAAAA,QAAQ,CAAC;AACLR,MAAAA,IAAI,EAAE,QADD;AAELM,MAAAA,IAFK;AAGLH,MAAAA;AAHK,KAAD,CAAR;AAKH,GAV2B,EAUzB,EAVyB,CAA5B;AAYA,QAAMS,KAAK,GAAGjB,WAAW,CAAC,MAAM,CAE/B,CAFwB,CAAzB;AAGA,SAAO,CAACG,KAAD,EAAQW,QAAR,EAAkBG,KAAlB,CAAP;AACH;;AAGD,eAAeL,SAAf","sourcesContent":["import { useState, useCallback, useReducer } from 'react'\n\n\nfunction reducer(state, action) {\n    //CHANGE\n    switch (action.type) {\n        case 'CHANGE':\n            // console.log(...state)\n            console.log(action.value)\n            return {\n                ...state,\n                initialFrom: {\n                    ...state.input,\n                    [action.name]:action.value\n                }\n                \n            }\n            \n        case 'RESET':\n\n    \n        default:\n            break;\n    }\n    //RESET\n}\n\n\n// function useInputs(initialFrom) {\n//     const [form, setFrom] = useState(initialFrom);\n//     const onChange = useCallback(e=> {\n//         const {name, value} = e.target;\n//         setFrom(form => ({ ...form, [name]: value}));\n//     }, [])\n//     const reset = useCallback(() => setFrom(initialFrom), [initialFrom])\n\n//     return [form, onChange, reset]\n// }\n\nfunction useInputs(initialFrom){\n    const [state, dispatch] = useReducer(reducer, initialFrom);\n    const onChange = useCallback(e => {\n        \n        const {name, value} = e.target;\n        \n        \n        dispatch({\n            type: 'CHANGE',\n            name,\n            value\n        })\n    }, [])\n\n    const reset = useCallback(() => {\n\n    })\n    return [state, onChange, reset]\n}\n\n\nexport default useInputs"]},"metadata":{},"sourceType":"module"}