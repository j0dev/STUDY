{"ast":null,"code":"import { useCallback, useReducer } from 'react';\n\nfunction reducer(state, action) {\n  //CHANGE\n  switch (action.type) {\n    case 'CHANGE':\n      // console.log(...state)\n      return { ...state,\n        [action.name]: action.value\n      };\n\n    case 'RESET':\n      console.log('reset'); // console.log(initialFrom);\n\n      return Object.keys(state).reduce((acc, current) => {\n        acc[current] = '';\n        return acc;\n      }, {});\n\n    default:\n      break;\n  } //RESET\n\n} // function useInputs(initialFrom) {\n//     const [form, setFrom] = useState(initialFrom);\n//     const onChange = useCallback(e=> {\n//         const {name, value} = e.target;\n//         setFrom(form => ({ ...form, [name]: value}));\n//     }, [])\n//     const reset = useCallback(() => setFrom(initialFrom), [initialFrom])\n//     return [form, onChange, reset]\n// }\n\n\nfunction useInputs(initialFrom) {\n  const [form, dispatch] = useReducer(reducer, initialFrom);\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE',\n      name,\n      value\n    });\n  }, []);\n  const reset = useCallback(() => dispatch({\n    type: 'RESET'\n  }), []);\n  return [form, onChange, reset];\n}\n\nexport default useInputs;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/useInputs.js"],"names":["useCallback","useReducer","reducer","state","action","type","name","value","console","log","Object","keys","reduce","acc","current","useInputs","initialFrom","form","dispatch","onChange","e","target","reset"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI;AAEA,aAAO,EACH,GAAGF,KADA;AAEH,SAACC,MAAM,CAACE,IAAR,GAAcF,MAAM,CAACG;AAFlB,OAAP;;AAKJ,SAAK,OAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADJ,CAEI;;AACA,aAAOC,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,MAAnB,CAA0B,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC/CD,QAAAA,GAAG,CAACC,OAAD,CAAH,GAAe,EAAf;AACA,eAAOD,GAAP;AACH,OAHM,EAGJ,EAHI,CAAP;;AAKJ;AACI;AAlBR,GAF4B,CAsB5B;;AACH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,SAASE,SAAT,CAAmBC,WAAnB,EAA+B;AAC3B,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBjB,UAAU,CAACC,OAAD,EAAUc,WAAV,CAAnC;AACA,QAAMG,QAAQ,GAAGnB,WAAW,CAACoB,CAAC,IAAI;AAC9B,UAAM;AAACd,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBa,CAAC,CAACC,MAAxB;AACAH,IAAAA,QAAQ,CAAC;AACLb,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,IAFK;AAGLC,MAAAA;AAHK,KAAD,CAAR;AAKH,GAP2B,EAOzB,EAPyB,CAA5B;AASA,QAAMe,KAAK,GAAGtB,WAAW,CAAC,MAAMkB,QAAQ,CAAC;AAAEb,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAf,EAAoC,EAApC,CAAzB;AACA,SAAO,CAACY,IAAD,EAAOE,QAAP,EAAiBG,KAAjB,CAAP;AACH;;AAGD,eAAeP,SAAf","sourcesContent":["import { useCallback, useReducer } from 'react'\n\n\nfunction reducer(state, action) {\n    //CHANGE\n    switch (action.type) {\n        case 'CHANGE':\n            // console.log(...state)\n            \n            return {\n                ...state,\n                [action.name]:action.value\n            }\n            \n        case 'RESET':\n            console.log('reset');\n            // console.log(initialFrom);\n            return Object.keys(state).reduce((acc, current) => {\n                acc[current] = '';\n                return acc;\n            }, {});\n            \n        default:\n            break;\n    }\n    //RESET\n}\n\n\n// function useInputs(initialFrom) {\n//     const [form, setFrom] = useState(initialFrom);\n//     const onChange = useCallback(e=> {\n//         const {name, value} = e.target;\n//         setFrom(form => ({ ...form, [name]: value}));\n//     }, [])\n//     const reset = useCallback(() => setFrom(initialFrom), [initialFrom])\n\n//     return [form, onChange, reset]\n// }\n\nfunction useInputs(initialFrom){\n    const [form, dispatch] = useReducer(reducer, initialFrom);\n    const onChange = useCallback(e => {\n        const {name, value} = e.target;\n        dispatch({\n            type: 'CHANGE',\n            name,\n            value\n        })\n    }, [])\n\n    const reset = useCallback(() => dispatch({ type: 'RESET' }), []);\n    return [form, onChange, reset]\n}\n\n\nexport default useInputs"]},"metadata":{},"sourceType":"module"}