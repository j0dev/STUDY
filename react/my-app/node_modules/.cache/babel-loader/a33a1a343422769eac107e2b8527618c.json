{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/InputSample.js\";\nimport React, { useState, useRef } from 'react';\n\nfunction InputSample() {\n  const [inputs, setInputs] = useState({\n    name: '',\n    nick: ''\n  });\n  const nameInput = useRef();\n  const {\n    name,\n    nick\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({ ...inputs,\n      //객체를 업데이트 할때는 스프레드 문법을 써서 객체를 복사한 후, 업데이트 해줘야함.\n      [name]: value\n    });\n  };\n\n  const onReset = () => {\n    setInputs({\n      name: '',\n      nick: ''\n    });\n    nameInput.current.focus();\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"name\",\n    onChange: onChange,\n    placeholder: \"\\uC774\\uB984\",\n    value: name,\n    ref: nameInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"nick\",\n    onChange: onChange,\n    placeholder: \"\\uB2C9\\uB124\\uC784\",\n    value: nick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\uCD08\\uAE30\\uD654\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\\uAC12 : \"), name, \" (\", nick, \")\"));\n}\n\nexport default InputSample;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/my-app/src/InputSample.js"],"names":["React","useState","useRef","InputSample","inputs","setInputs","name","nick","nameInput","onChange","e","value","target","onReset","current","focus"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;AAEA,SAASC,WAAT,GAAuB;AAEnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACjCK,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAApC;AAKA,QAAMC,SAAS,GAAGN,MAAM,EAAxB;AAEA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBH,MAAvB;;AAEA,QAAMK,QAAQ,GAAKC,CAAD,IAAO;AACrB,UAAM;AAAEJ,MAAAA,IAAF;AAAQK,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAP,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN;AACA,OAACE,IAAD,GAAQK;AAHF,KAAD,CAAT;AAKH,GAPD;;AASA,QAAME,OAAO,GAAG,MAAM;AAClBR,IAAAA,SAAS,CAAC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,IAAI,EAAE;AAFA,KAAD,CAAT;AAIAC,IAAAA,SAAS,CAACM,OAAV,CAAkBC,KAAlB;AACH,GAND;;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EAAEN,QAFd;AAGI,IAAA,WAAW,EAAC,cAHhB;AAII,IAAA,KAAK,EAAIH,IAJb;AAKI,IAAA,GAAG,EAAEE,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EAAEC,QAFd;AAGI,IAAA,WAAW,EAAC,oBAHhB;AAII,IAAA,KAAK,EAAIF,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAeI;AAAQ,IAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKP,IAFL,QAEaC,IAFb,MAhBJ,CADJ;AAuBH;;AAED,eAAeJ,WAAf","sourcesContent":["import React, { useState, useRef } from 'react'\n\nfunction InputSample() {\n    \n    const [inputs, setInputs] = useState({\n        name: '',\n        nick: '',\n    });\n\n    const nameInput = useRef();\n\n    const { name, nick } = inputs;\n\n    const onChange  = (e) => {\n        const { name, value } = e.target;\n        setInputs({\n            ...inputs,\n            //객체를 업데이트 할때는 스프레드 문법을 써서 객체를 복사한 후, 업데이트 해줘야함.\n            [name]: value,\n        })\n    }\n\n    const onReset = () => {\n        setInputs({\n            name: '',\n            nick: '',\n        })\n        nameInput.current.focus();\n    }\n\n    return (\n        <div>\n            <input\n                name=\"name\"\n                onChange={onChange}\n                placeholder='이름'\n                value = {name}\n                ref={nameInput}\n            />\n            <input\n                name=\"nick\"\n                onChange={onChange}\n                placeholder='닉네임'\n                value = {nick}\n                \n            />\n            <button onClick={onReset}>초기화</button>\n            <div>\n                <b>값 : </b>\n                {name} ({nick})\n            </div>\n        </div>\n    )\n}\n\nexport default InputSample;"]},"metadata":{},"sourceType":"module"}