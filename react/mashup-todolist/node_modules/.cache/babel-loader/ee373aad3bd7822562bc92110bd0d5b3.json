{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/mashup-todolist/src/TodoContext.js\";\nimport React, { useReducer, createContext, useContext, useRef } from \"react\";\nconst initalTodos = [{\n  id: 1,\n  text: \"프로젝트 생성하기\",\n  done: true\n}, {\n  id: 2,\n  text: \"컴포넌트 스타일링 하기\",\n  done: true\n}, {\n  id: 3,\n  text: \"Context 만들기\",\n  done: false\n}, {\n  id: 4,\n  text: \"기능 구현하기\",\n  done: false\n}];\n/*\n    CREATE\n    TOGGLE\n    REMOVE\n*/\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case \"CREATE\":\n      return state.concat(action.todo);\n\n    case \"TOGGLE\":\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case \"REMOVE\":\n      return state.filter(todo => todo.id !== action.id);\n\n    default:\n      throw new Error(`Unhandled Action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\nexport function TodoProvider({\n  children\n}) {\n  const [state, dispatch] = useReducer(todoReducer, initalTodos);\n  const nextId = useRef(5);\n  return /*#__PURE__*/React.createElement(TodoStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TodoDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TodoNextIdContext.Provider, {\n    value: nextId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, children)));\n}\nexport function useTodoState() {\n  return useContext(TodoStateContext);\n}\nexport function useTodoDispatch() {\n  return useContext(TodoDispatchContext);\n}\nexport function useTodoNextId() {\n  return useContext(TodoNextIdContext);\n}","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/mashup-todolist/src/TodoContext.js"],"names":["React","useReducer","createContext","useContext","useRef","initalTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","dispatch","nextId","useTodoState","useTodoDispatch","useTodoNextId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,EAA2CC,UAA3C,EAAuDC,MAAvD,QAAqE,OAArE;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CADkB,EAMlB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,cAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CANkB,EAWlB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAXkB,EAgBlB;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CAhBkB,CAApB;AAuBA;;;;;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAOF,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,IAApB,CAAP;;AACF,SAAK,QAAL;AACE,aAAOJ,KAAK,CAACK,GAAN,CAAUD,IAAI,IACnBA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACL,EAAnB,GAAwB,EAAE,GAAGQ,IAAL;AAAWN,QAAAA,IAAI,EAAE,CAACM,IAAI,CAACN;AAAvB,OAAxB,GAAwDM,IADnD,CAAP;;AAGF,SAAK,QAAL;AACE,aAAOJ,KAAK,CAACM,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACL,EAAxC,CAAP;;AACF;AACE,YAAM,IAAIW,KAAJ,CAAW,0BAAyBN,MAAM,CAACC,IAAK,EAAhD,CAAN;AAVJ;AAYD;;AAED,MAAMM,gBAAgB,GAAGhB,aAAa,EAAtC;AACA,MAAMiB,mBAAmB,GAAGjB,aAAa,EAAzC;AACA,MAAMkB,iBAAiB,GAAGlB,aAAa,EAAvC;AAEA,OAAO,SAASmB,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAM,CAACZ,KAAD,EAAQa,QAAR,IAAoBtB,UAAU,CAACQ,WAAD,EAAcJ,WAAd,CAApC;AACA,QAAMmB,MAAM,GAAGpB,MAAM,CAAC,CAAD,CAArB;AACA,sBACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEM,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEa,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF,CADF,CADF;AASD;AAED,OAAO,SAASG,YAAT,GAAwB;AAC7B,SAAOtB,UAAU,CAACe,gBAAD,CAAjB;AACD;AAED,OAAO,SAASQ,eAAT,GAA2B;AAChC,SAAOvB,UAAU,CAACgB,mBAAD,CAAjB;AACD;AAED,OAAO,SAASQ,aAAT,GAAyB;AAC9B,SAAOxB,UAAU,CAACiB,iBAAD,CAAjB;AACD","sourcesContent":["import React, { useReducer, createContext, useContext, useRef } from \"react\";\n\nconst initalTodos = [\n  {\n    id: 1,\n    text: \"프로젝트 생성하기\",\n    done: true\n  },\n  {\n    id: 2,\n    text: \"컴포넌트 스타일링 하기\",\n    done: true\n  },\n  {\n    id: 3,\n    text: \"Context 만들기\",\n    done: false\n  },\n  {\n    id: 4,\n    text: \"기능 구현하기\",\n    done: false\n  }\n];\n\n/*\n    CREATE\n    TOGGLE\n    REMOVE\n*/\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case \"CREATE\":\n      return state.concat(action.todo);\n    case \"TOGGLE\":\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n    case \"REMOVE\":\n      return state.filter(todo => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled Action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({ children }) {\n  const [state, dispatch] = useReducer(todoReducer, initalTodos);\n  const nextId = useRef(5);\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nexport function useTodoState() {\n  return useContext(TodoStateContext);\n}\n\nexport function useTodoDispatch() {\n  return useContext(TodoDispatchContext);\n}\n\nexport function useTodoNextId() {\n  return useContext(TodoNextIdContext);\n}\n"]},"metadata":{},"sourceType":"module"}