{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  text: \"\",\n  list: []\n};\nconst INCREASE = \"INCREASE\";\nconst DECREASE = \"DECREASE\";\nconst CHANGE_TEXT = \"CHANGE_TEXT\";\nconst ADD_TO_LIST = \"ADD_TO_LIST\"; //action create function\n\nconst increase = () => ({\n  type: INCREASE\n});\n\nconst decrease = () => ({\n  type: DECREASE\n});\n\nconst changeText = text => ({\n  type: CHANGE_TEXT,\n  text\n});\n\nconst addToList = item => ({\n  type: ADD_TO_LIST,\n  item\n}); //reducer\n\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case INCREASE:\n      return { ...state,\n        counter: state.counter + 1\n      };\n\n    case DECREASE:\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case CHANGE_TEXT:\n      return { ...state,\n        text: action.text\n      };\n\n    case ADD_TO_LIST:\n      return { ...state,\n        list: state.list.concat(action.item)\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer); // console.log(store.getState());\n//subscrible\n\nconst listner = () => {\n  const state = store.getState(); //   console.log(state);\n};\n\nconst unsubscribe = store.subscribe(listner); // unsubscribe();\n\nstore.dispatch(increase());\nstore.dispatch(decrease());\nstore.dispatch(changeText(\"hello!!!\"));\nstore.dispatch(addToList({\n  id: 1,\n  text: \"wow!\"\n}));\nwindow.store = store;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/learn-redux/src/exercise.js"],"names":["createStore","initialState","counter","text","list","INCREASE","DECREASE","CHANGE_TEXT","ADD_TO_LIST","increase","type","decrease","changeText","addToList","item","reducer","state","action","concat","store","listner","getState","unsubscribe","subscribe","dispatch","id","window"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,OAAO;AACtBC,EAAAA,IAAI,EAAEL;AADgB,CAAP,CAAjB;;AAIA,MAAMM,QAAQ,GAAG,OAAO;AACtBD,EAAAA,IAAI,EAAEJ;AADgB,CAAP,CAAjB;;AAIA,MAAMM,UAAU,GAAIT,IAAD,KAAW;AAC5BO,EAAAA,IAAI,EAAEH,WADsB;AAE5BJ,EAAAA;AAF4B,CAAX,CAAnB;;AAKA,MAAMU,SAAS,GAAIC,IAAD,KAAW;AAC3BJ,EAAAA,IAAI,EAAEF,WADqB;AAE3BM,EAAAA;AAF2B,CAAX,CAAlB,C,CAKA;;;AACA,SAASC,OAAT,CAAiBC,KAAK,GAAGf,YAAzB,EAAuCgB,MAAvC,EAA+C;AAC7C,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKL,QAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELd,QAAAA,OAAO,EAAEc,KAAK,CAACd,OAAN,GAAgB;AAFpB,OAAP;;AAIF,SAAKI,QAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELd,QAAAA,OAAO,EAAEc,KAAK,CAACd,OAAN,GAAgB;AAFpB,OAAP;;AAIF,SAAKK,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELb,QAAAA,IAAI,EAAEc,MAAM,CAACd;AAFR,OAAP;;AAIF,SAAKK,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELZ,QAAAA,IAAI,EAAEY,KAAK,CAACZ,IAAN,CAAWc,MAAX,CAAkBD,MAAM,CAACH,IAAzB;AAFD,OAAP;;AAKF;AACE,aAAOE,KAAP;AAvBJ;AAyBD;;AAED,MAAMG,KAAK,GAAGnB,WAAW,CAACe,OAAD,CAAzB,C,CACA;AAEA;;AACA,MAAMK,OAAO,GAAG,MAAM;AACpB,QAAMJ,KAAK,GAAGG,KAAK,CAACE,QAAN,EAAd,CADoB,CAEpB;AACD,CAHD;;AAKA,MAAMC,WAAW,GAAGH,KAAK,CAACI,SAAN,CAAgBH,OAAhB,CAApB,C,CACA;;AAEAD,KAAK,CAACK,QAAN,CAAef,QAAQ,EAAvB;AACAU,KAAK,CAACK,QAAN,CAAeb,QAAQ,EAAvB;AACAQ,KAAK,CAACK,QAAN,CAAeZ,UAAU,CAAC,UAAD,CAAzB;AACAO,KAAK,CAACK,QAAN,CAAeX,SAAS,CAAC;AAAEY,EAAAA,EAAE,EAAE,CAAN;AAAStB,EAAAA,IAAI,EAAE;AAAf,CAAD,CAAxB;AAEAuB,MAAM,CAACP,KAAP,GAAeA,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nconst initialState = {\n  counter: 0,\n  text: \"\",\n  list: [],\n};\n\nconst INCREASE = \"INCREASE\";\nconst DECREASE = \"DECREASE\";\nconst CHANGE_TEXT = \"CHANGE_TEXT\";\nconst ADD_TO_LIST = \"ADD_TO_LIST\";\n\n//action create function\nconst increase = () => ({\n  type: INCREASE,\n});\n\nconst decrease = () => ({\n  type: DECREASE,\n});\n\nconst changeText = (text) => ({\n  type: CHANGE_TEXT,\n  text,\n});\n\nconst addToList = (item) => ({\n  type: ADD_TO_LIST,\n  item,\n});\n\n//reducer\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case INCREASE:\n      return {\n        ...state,\n        counter: state.counter + 1,\n      };\n    case DECREASE:\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n    case CHANGE_TEXT:\n      return {\n        ...state,\n        text: action.text,\n      };\n    case ADD_TO_LIST:\n      return {\n        ...state,\n        list: state.list.concat(action.item),\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n// console.log(store.getState());\n\n//subscrible\nconst listner = () => {\n  const state = store.getState();\n  //   console.log(state);\n};\n\nconst unsubscribe = store.subscribe(listner);\n// unsubscribe();\n\nstore.dispatch(increase());\nstore.dispatch(decrease());\nstore.dispatch(changeText(\"hello!!!\"));\nstore.dispatch(addToList({ id: 1, text: \"wow!\" }));\n\nwindow.store = store;\n"]},"metadata":{},"sourceType":"module"}