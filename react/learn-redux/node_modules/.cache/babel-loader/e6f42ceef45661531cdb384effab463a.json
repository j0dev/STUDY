{"ast":null,"code":"const SET_DIFF = \"counter/SET_DIFF\";\nconst INCREASE = \"counter/INCREASE\";\nconst DECREASE = \"counter/DECREASE\";\nexport const setDiff = diff => ({\n  type: SET_DIFF,\n  diff\n});\nexport const increase = () => ({\n  type: INCREASE\n});\nexport const decrease = () => ({\n  type: DECREASE\n});\nconst initialState = {\n  number: 0,\n  diff: 1\n};\nexport default function counter(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIFF:\n      console.log(action.diff);\n      return { ...state,\n        diff: action.diff\n      };\n\n    case INCREASE:\n      return { ...state,\n        number: state.number + state.diff\n      };\n\n    case DECREASE:\n      return { ...state,\n        number: state.nubmer - state.diff\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/learn-redux/src/modules/counter.js"],"names":["SET_DIFF","INCREASE","DECREASE","setDiff","diff","type","increase","decrease","initialState","number","counter","state","action","console","log","nubmer"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kBAAjB;AACA,MAAMC,QAAQ,GAAG,kBAAjB;AACA,MAAMC,QAAQ,GAAG,kBAAjB;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEL,QAD0B;AAEhCI,EAAAA;AAFgC,CAAX,CAAhB;AAIP,OAAO,MAAME,QAAQ,GAAG,OAAO;AAC7BD,EAAAA,IAAI,EAAEJ;AADuB,CAAP,CAAjB;AAIP,OAAO,MAAMM,QAAQ,GAAG,OAAO;AAC7BF,EAAAA,IAAI,EAAEH;AADuB,CAAP,CAAjB;AAIP,MAAMM,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CADW;AAEnBL,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,eAAe,SAASM,OAAT,CAAiBC,KAAK,GAAGH,YAAzB,EAAuCI,MAAvC,EAA+C;AAC5D,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKL,QAAL;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACR,IAAnB;AACA,aAAO,EACL,GAAGO,KADE;AAELP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFR,OAAP;;AAIF,SAAKH,QAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,GAAeE,KAAK,CAACP;AAFxB,OAAP;;AAIF,SAAKF,QAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,MAAM,EAAEE,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACP;AAFxB,OAAP;;AAKF;AACE,aAAOO,KAAP;AAnBJ;AAqBD","sourcesContent":["const SET_DIFF = \"counter/SET_DIFF\";\nconst INCREASE = \"counter/INCREASE\";\nconst DECREASE = \"counter/DECREASE\";\n\nexport const setDiff = (diff) => ({\n  type: SET_DIFF,\n  diff,\n});\nexport const increase = () => ({\n  type: INCREASE,\n});\n\nexport const decrease = () => ({\n  type: DECREASE,\n});\n\nconst initialState = {\n  number: 0,\n  diff: 1,\n};\n\nexport default function counter(state = initialState, action) {\n  switch (action.type) {\n    case SET_DIFF:\n      console.log(action.diff);\n      return {\n        ...state,\n        diff: action.diff,\n      };\n    case INCREASE:\n      return {\n        ...state,\n        number: state.number + state.diff,\n      };\n    case DECREASE:\n      return {\n        ...state,\n        number: state.nubmer - state.diff,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}