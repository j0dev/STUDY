{"ast":null,"code":"const ADD_TODO = \"todo/ADD_TODO\";\nconst TOGGLE_TOTO = \"todo/TOGGLE_TODO\";\nlet nextId = 1;\nexport const addToto = text => ({\n  type: ADD_TODO,\n  todo: {\n    id: nextId++,\n    text\n  }\n});\nexport const toggleTodo = id => ({\n  type: TOGGLE_TOTO,\n  id\n});\nconst initialState = [\n  /*\n    {\n        id: 1\n        text: 'asdfasd'\n        done: false\n    }\n    */\n];\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat(action.todo);\n\n    case TOGGLE_TOTO:\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        done: !todo\n      } : todo);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/learn-redux/src/modules/todos.js"],"names":["ADD_TODO","TOGGLE_TOTO","nextId","addToto","text","type","todo","id","toggleTodo","initialState","todos","state","action","concat","map","done"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,eAAjB;AACA,MAAMC,WAAW,GAAG,kBAApB;AAEA,IAAIC,MAAM,GAAG,CAAb;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEL,QAD0B;AAEhCM,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAEL,MAAM,EADN;AAEJE,IAAAA;AAFI;AAF0B,CAAX,CAAhB;AAQP,OAAO,MAAMI,UAAU,GAAID,EAAD,KAAS;AACjCF,EAAAA,IAAI,EAAEJ,WAD2B;AAEjCM,EAAAA;AAFiC,CAAT,CAAnB;AAKP,MAAME,YAAY,GAAG;AACnB;;;;;;;AADmB,CAArB;AAUA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAGF,YAAvB,EAAqCG,MAArC,EAA6C;AAC1D,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKL,QAAL;AACE,aAAOW,KAAK,CAACE,MAAN,CAAaD,MAAM,CAACN,IAApB,CAAP;;AACF,SAAKL,WAAL;AACE,aAAOU,KAAK,CAACG,GAAN,CAAWR,IAAD,IACfA,IAAI,CAACC,EAAL,KAAYK,MAAM,CAACL,EAAnB,GAAwB,EAAE,GAAGD,IAAL;AAAWS,QAAAA,IAAI,EAAE,CAACT;AAAlB,OAAxB,GAAmDA,IAD9C,CAAP;;AAGF;AACE,aAAOK,KAAP;AARJ;AAUD","sourcesContent":["const ADD_TODO = \"todo/ADD_TODO\";\nconst TOGGLE_TOTO = \"todo/TOGGLE_TODO\";\n\nlet nextId = 1;\n\nexport const addToto = (text) => ({\n  type: ADD_TODO,\n  todo: {\n    id: nextId++,\n    text,\n  },\n});\n\nexport const toggleTodo = (id) => ({\n  type: TOGGLE_TOTO,\n  id,\n});\n\nconst initialState = [\n  /*\n    {\n        id: 1\n        text: 'asdfasd'\n        done: false\n    }\n    */\n];\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return state.concat(action.todo);\n    case TOGGLE_TOTO:\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, done: !todo } : todo\n      );\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}