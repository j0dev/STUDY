{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/styling-with-styled-componets/src/App.js\";\nimport React, { useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Button from \"./components/Button\";\nimport Dialog from \"./components/Dialog\";\nconst AppBlock = styled.div`\n  width: 512px;\n  margin: 0 auto;\n  margin-top: 4rem;\n  border: 1px solid black;\n  padding: 1rem;\n`;\nconst palette = {\n  blue: \"#228be6\",\n  gray: \"#496057\",\n  pink: \"#f06595\"\n};\nconst ButotnGroup = styled.div`\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\nfunction App() {\n  const [dialog, setDialog] = useState(false);\n\n  const onClick = () => {\n    setDialog(true);\n  };\n\n  const onConfirm = () => {\n    setDialog(false);\n  };\n\n  const onCancel = () => {\n    setDialog(false);\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: {\n      palette\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    color: \"pink\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"\\uC0AD\\uC81C\")), /*#__PURE__*/React.createElement(Dialog, {\n    title: \"\\uC815\\uB9D0\\uB85C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\",\n    confirmText: \"\\uC0AD\\uC81C\",\n    cancelText: \"\\uCDE8\\uC18C\",\n    visible: dialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"\\uB370\\uC774\\uD130\\uB97C \\uC815\\uB9D0\\uB85C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/styling-with-styled-componets/src/App.js"],"names":["React","useState","styled","ThemeProvider","Button","Dialog","AppBlock","div","palette","blue","gray","pink","ButotnGroup","App","dialog","setDialog","onClick","onConfirm","onCancel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAI;;;;;;CAA5B;AAQA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,SADQ;AAEdC,EAAAA,IAAI,EAAE,SAFQ;AAGdC,EAAAA,IAAI,EAAE;AAHQ,CAAhB;AAMA,MAAMC,WAAW,GAAGV,MAAM,CAACK,GAAI;;;;CAA/B;;AAMA,SAASM,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMe,OAAO,GAAG,MAAM;AACpBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAGA,QAAME,SAAS,GAAG,MAAM;AACtBF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMG,QAAQ,GAAG,MAAM;AACrBH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAGA,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEP,MAAAA;AAAF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,uDACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,OAAO,EAAEQ,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAmCE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,sEADR;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,UAAU,EAAC,cAHb;AAIE,IAAA,OAAO,EAAEF,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAnCF,CADF,CADF;AAgDD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Button from \"./components/Button\";\nimport Dialog from \"./components/Dialog\";\n\nconst AppBlock = styled.div`\n  width: 512px;\n  margin: 0 auto;\n  margin-top: 4rem;\n  border: 1px solid black;\n  padding: 1rem;\n`;\n\nconst palette = {\n  blue: \"#228be6\",\n  gray: \"#496057\",\n  pink: \"#f06595\"\n};\n\nconst ButotnGroup = styled.div`\n  & + & {\n    margin-top: 1rem;\n  }\n`;\n\nfunction App() {\n  const [dialog, setDialog] = useState(false);\n  const onClick = () => {\n    setDialog(true);\n  };\n  const onConfirm = () => {\n    setDialog(false);\n  };\n  const onCancel = () => {\n    setDialog(false);\n  };\n  return (\n    <ThemeProvider theme={{ palette }}>\n      <>\n        <AppBlock>\n          <Button size=\"large\" color=\"pink\" onClick={onClick}>\n            삭제\n          </Button>\n          {/* <ButotnGroup>\n            <Button size=\"large\" color=\"pink\">\n              Button\n            </Button>\n            <Button>Button</Button>\n            <Button size=\"small\" color=\"gray\">\n              Button\n            </Button>\n          </ButotnGroup>\n          <ButotnGroup>\n            <Button size=\"large\" color=\"pink\" outline>\n              Button\n            </Button>\n            <Button outline>Button</Button>\n            <Button size=\"small\" color=\"gray\" outline>\n              Button\n            </Button>\n          </ButotnGroup>\n          <ButotnGroup>\n            <Button size=\"large\" color=\"pink\" fullWidth>\n              Button\n            </Button>\n            <Button size=\"large\" fullWidth>\n              Button\n            </Button>\n            <Button size=\"large\" color=\"gray\" fullWidth>\n              삭제하기\n            </Button>\n          </ButotnGroup> */}\n        </AppBlock>\n        <Dialog\n          title=\"정말로 삭제하시겠습니까?\"\n          confirmText=\"삭제\"\n          cancelText=\"취소\"\n          visible={dialog}\n        >\n          데이터를 정말로 삭제하시겠습니까?\n        </Dialog>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}