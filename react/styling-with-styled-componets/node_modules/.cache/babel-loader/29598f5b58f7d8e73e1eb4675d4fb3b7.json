{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/styling-with-styled-componets/src/components/Button.js\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { darken, lighten } from \"polished\";\nconst colorStyles = css`\n  ${({\n  theme,\n  color\n}) => {\n  const selectedColor = theme.palette[color];\n  return css`\n      background: ${selectedColor};\n      &:hover {\n        background: ${lighten(0.1, selectedColor)};\n      }\n      &:active {\n        background: ${darken(0.1, selectedColor)};\n      }\n      ${props => props.outline && css`\n          color: ${selectedColor};\n          background: none;\n          border: 1px solid ${selectedColor};\n        `}\n    `;\n}}\n`;\nconst sizes = {\n  large: {\n    height: \"3rem\",\n    fontSize: \"1.25rem\"\n  },\n  medium: {\n    height: \"2.25rem\",\n    fontSize: \"1rem\"\n  },\n  small: {\n    height: \"1.75rem\",\n    fontSize: \"0.875rem\"\n  }\n};\nconst sizeStyles = css`\n  ${({\n  size\n}) => css`\n    height: ${sizes[size].height};\n    font-size: ${sizes[size].fontSize};\n  `}\n`;\nconst StyledButton = styled.button`\n  /* 공통 스타일 */\n  display: inline-flex;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  ${colorStyles}\n  ${sizeStyles}\n\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nfunction Button({\n  children,\n  size,\n  color,\n  outline,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(StyledButton, Object.assign({\n    color: color,\n    outline: outline\n  }, rest, {\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), children);\n}\n\nButton.defaultProps = {\n  color: \"blue\",\n  size: \"medium\"\n};\nexport default Button;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/styling-with-styled-componets/src/components/Button.js"],"names":["React","styled","css","darken","lighten","colorStyles","theme","color","selectedColor","palette","props","outline","sizes","large","height","fontSize","medium","small","sizeStyles","size","StyledButton","button","Button","children","rest","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,UAAhC;AAEA,MAAMC,WAAW,GAAGH,GAAI;IACpB,CAAC;AAAEI,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AACtB,QAAMC,aAAa,GAAGF,KAAK,CAACG,OAAN,CAAcF,KAAd,CAAtB;AACA,SAAOL,GAAI;oBACKM,aAAc;;sBAEZJ,OAAO,CAAC,GAAD,EAAMI,aAAN,CAAqB;;;sBAG5BL,MAAM,CAAC,GAAD,EAAMK,aAAN,CAAqB;;QAEzCE,KAAK,IACLA,KAAK,CAACC,OAAN,IACAT,GAAI;mBACOM,aAAc;;8BAEHA,aAAc;SAClC;KAdN;AAgBD,CAAC;CAnBJ;AAsBA,MAAMI,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADK;AAKZC,EAAAA,MAAM,EAAE;AACNF,IAAAA,MAAM,EAAE,SADF;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GALI;AASZE,EAAAA,KAAK,EAAE;AACLH,IAAAA,MAAM,EAAE,SADH;AAELC,IAAAA,QAAQ,EAAE;AAFL;AATK,CAAd;AAeA,MAAMG,UAAU,GAAGhB,GAAI;IACnB,CAAC;AAAEiB,EAAAA;AAAF,CAAD,KAAcjB,GAAI;cACRU,KAAK,CAACO,IAAD,CAAL,CAAYL,MAAO;iBAChBF,KAAK,CAACO,IAAD,CAAL,CAAYJ,QAAS;GAClC;CAJJ;AAOA,MAAMK,YAAY,GAAGnB,MAAM,CAACoB,MAAO;;;;;;;;;;;;IAY/BhB,WAAY;IACZa,UAAW;;;;;CAbf;;AAoBA,SAASI,MAAT,CAAgB;AAAEC,EAAAA,QAAF;AAAYJ,EAAAA,IAAZ;AAAkBZ,EAAAA,KAAlB;AAAyBI,EAAAA,OAAzB;AAAkC,KAAGa;AAArC,CAAhB,EAA6D;AAC3D,sBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEjB,KAArB;AAA4B,IAAA,OAAO,EAAEI;AAArC,KAAkDa,IAAlD;AAAwD,IAAA,IAAI,EAAEL,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGI,QADH,CADF;AAKD;;AAEDD,MAAM,CAACG,YAAP,GAAsB;AACpBlB,EAAAA,KAAK,EAAE,MADa;AAEpBY,EAAAA,IAAI,EAAE;AAFc,CAAtB;AAKA,eAAeG,MAAf","sourcesContent":["import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { darken, lighten } from \"polished\";\n\nconst colorStyles = css`\n  ${({ theme, color }) => {\n    const selectedColor = theme.palette[color];\n    return css`\n      background: ${selectedColor};\n      &:hover {\n        background: ${lighten(0.1, selectedColor)};\n      }\n      &:active {\n        background: ${darken(0.1, selectedColor)};\n      }\n      ${props =>\n        props.outline &&\n        css`\n          color: ${selectedColor};\n          background: none;\n          border: 1px solid ${selectedColor};\n        `}\n    `;\n  }}\n`;\n\nconst sizes = {\n  large: {\n    height: \"3rem\",\n    fontSize: \"1.25rem\"\n  },\n  medium: {\n    height: \"2.25rem\",\n    fontSize: \"1rem\"\n  },\n  small: {\n    height: \"1.75rem\",\n    fontSize: \"0.875rem\"\n  }\n};\n\nconst sizeStyles = css`\n  ${({ size }) => css`\n    height: ${sizes[size].height};\n    font-size: ${sizes[size].fontSize};\n  `}\n`;\n\nconst StyledButton = styled.button`\n  /* 공통 스타일 */\n  display: inline-flex;\n  outline: none;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  font-weight: bold;\n  cursor: pointer;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  ${colorStyles}\n  ${sizeStyles}\n\n  & + & {\n    margin-left: 1rem;\n  }\n`;\n\nfunction Button({ children, size, color, outline, ...rest }) {\n  return (\n    <StyledButton color={color} outline={outline} {...rest} size={size}>\n      {children}\n    </StyledButton>\n  );\n}\n\nButton.defaultProps = {\n  color: \"blue\",\n  size: \"medium\"\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}