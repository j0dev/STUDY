{"ast":null,"code":"export default function createAsyncDispatcher(type, promiseFn) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n\n  async function actionHandler(dispatch, ...rest) {\n    dispatch({\n      type\n    });\n\n    try {\n      const data = await promiseFn(...rest);\n      dispatch({\n        type: SUCCESS,\n        data\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        error: e\n      });\n    }\n  }\n\n  return actionHandler;\n}\nconst loadingState = {\n  loading: true,\n  data: null,\n  error: null\n};\n\nconst success = data => ({\n  loading: false,\n  data,\n  error: null\n});\n\nconst error = e => ({\n  loading: true,\n  data: null,\n  error: e\n});","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/api-integrate/src/asyncActionUtils.js"],"names":["createAsyncDispatcher","type","promiseFn","SUCCESS","ERROR","actionHandler","dispatch","rest","data","e","error","loadingState","loading","success"],"mappings":"AAAA,eAAe,SAASA,qBAAT,CAA+BC,IAA/B,EAAqCC,SAArC,EAAgD;AAC7D,QAAMC,OAAO,GAAI,GAAEF,IAAK,UAAxB;AACA,QAAMG,KAAK,GAAI,GAAEH,IAAK,QAAtB;;AAEA,iBAAeI,aAAf,CAA6BC,QAA7B,EAAuC,GAAGC,IAA1C,EAAgD;AAC9CD,IAAAA,QAAQ,CAAC;AAAEL,MAAAA;AAAF,KAAD,CAAR;;AACA,QAAI;AACF,YAAMO,IAAI,GAAG,MAAMN,SAAS,CAAC,GAAGK,IAAJ,CAA5B;AACAD,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEE,OADC;AAEPK,QAAAA;AAFO,OAAD,CAAR;AAID,KAND,CAME,OAAOC,CAAP,EAAU;AACVH,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAEG,KADC;AAEPM,QAAAA,KAAK,EAAED;AAFA,OAAD,CAAR;AAID;AACF;;AAED,SAAOJ,aAAP;AACD;AAED,MAAMM,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBJ,EAAAA,IAAI,EAAE,IAFa;AAGnBE,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMG,OAAO,GAAGL,IAAI,KAAK;AACvBI,EAAAA,OAAO,EAAE,KADc;AAEvBJ,EAAAA,IAFuB;AAGvBE,EAAAA,KAAK,EAAE;AAHgB,CAAL,CAApB;;AAMA,MAAMA,KAAK,GAAGD,CAAC,KAAK;AAClBG,EAAAA,OAAO,EAAE,IADS;AAElBJ,EAAAA,IAAI,EAAE,IAFY;AAGlBE,EAAAA,KAAK,EAAED;AAHW,CAAL,CAAf","sourcesContent":["export default function createAsyncDispatcher(type, promiseFn) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n\n  async function actionHandler(dispatch, ...rest) {\n    dispatch({ type });\n    try {\n      const data = await promiseFn(...rest);\n      dispatch({\n        type: SUCCESS,\n        data\n      });\n    } catch (e) {\n      dispatch({\n        type: ERROR,\n        error: e\n      });\n    }\n  }\n\n  return actionHandler;\n}\n\nconst loadingState = {\n  loading: true,\n  data: null,\n  error: null\n};\n\nconst success = data => ({\n  loading: false,\n  data,\n  error: null\n});\n\nconst error = e => ({\n  loading: true,\n  data: null,\n  error: e\n});\n"]},"metadata":{},"sourceType":"module"}