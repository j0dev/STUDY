{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/api-integrate/src/UserContext.js\";\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport * as api from \"./api\";\nimport createAsyncDispatcher, { initialAsynState } from \"./asyncActionUtils\";\nconst initalState = {\n  users: initialAsynState,\n  user: initialAsynState\n};\n\nfunction usersReducer(state, action) {\n  switch (action.type) {\n    case \"GET_USERS\":\n      return { ...state,\n        users: loadingState\n      };\n\n    case \"GET_USERS_SUCCESS\":\n      return { ...state,\n        users: success(action.data)\n      };\n\n    case \"GET_USERS_ERROR\":\n      return { ...state,\n        users: error(action.error)\n      };\n\n    case \"GET_USER\":\n      return { ...state,\n        user: loadingState\n      };\n\n    case \"GET_USER_SUCCESS\":\n      return { ...state,\n        user: success(action.data)\n      };\n\n    case \"GET_USER_ERROR\":\n      return { ...state,\n        user: error(action.error)\n      };\n\n    default:\n      throw new Error(`UnHandled action type ${action.type}`);\n  }\n}\n\nconst UsersStateContext = createContext(null);\nconst USersDispatchContext = createContext(null);\nexport function UsersProvider({\n  children\n}) {\n  const [state, dispatch] = useReducer(usersReducer, initalState);\n  return /*#__PURE__*/React.createElement(UsersStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(USersDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, children));\n}\nexport function useUsersState() {\n  const state = useContext(UsersStateContext);\n\n  if (!state) {\n    throw new Error(\"Cannot find UserProvider\");\n  }\n\n  return state;\n}\nexport function useUsersDispatch() {\n  const dispatch = useContext(USersDispatchContext);\n\n  if (!dispatch) {\n    throw new Error(\"Cannot find UserProvider\");\n  }\n\n  return dispatch;\n}\nexport const getUsers = createAsyncDispatcher(\"GET_USERS\", api.getUsers);\nexport const getUser = createAsyncDispatcher(\"GET_USER\", api.getUser);","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/api-integrate/src/UserContext.js"],"names":["React","createContext","useReducer","useContext","api","createAsyncDispatcher","initialAsynState","initalState","users","user","usersReducer","state","action","type","loadingState","success","data","error","Error","UsersStateContext","USersDispatchContext","UsersProvider","children","dispatch","useUsersState","useUsersDispatch","getUsers","getUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;AACA,OAAOC,qBAAP,IAAgCC,gBAAhC,QAAwD,oBAAxD;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAEF,gBADW;AAElBG,EAAAA,IAAI,EAAEH;AAFY,CAApB;;AAKA,SAASI,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELH,QAAAA,KAAK,EAAEM;AAFF,OAAP;;AAIF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,KAAK,EAAEO,OAAO,CAACH,MAAM,CAACI,IAAR;AAFT,OAAP;;AAIF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,KAAK,EAAES,KAAK,CAACL,MAAM,CAACK,KAAR;AAFP,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,IAAI,EAAEK;AAFD,OAAP;;AAIF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,IAAI,EAAEM,OAAO,CAACH,MAAM,CAACI,IAAR;AAFR,OAAP;;AAIF,SAAK,gBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,IAAI,EAAEQ,KAAK,CAACL,MAAM,CAACK,KAAR;AAFN,OAAP;;AAKF;AACE,YAAM,IAAIC,KAAJ,CAAW,yBAAwBN,MAAM,CAACC,IAAK,EAA/C,CAAN;AAjCJ;AAmCD;;AAED,MAAMM,iBAAiB,GAAGlB,aAAa,CAAC,IAAD,CAAvC;AACA,MAAMmB,oBAAoB,GAAGnB,aAAa,CAAC,IAAD,CAA1C;AAEA,OAAO,SAASoB,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAC1C,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBrB,UAAU,CAACQ,YAAD,EAAeH,WAAf,CAApC;AACA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEI,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEY,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF,CADF;AAOD;AAED,OAAO,SAASE,aAAT,GAAyB;AAC9B,QAAMb,KAAK,GAAGR,UAAU,CAACgB,iBAAD,CAAxB;;AACA,MAAI,CAACR,KAAL,EAAY;AACV,UAAM,IAAIO,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,SAAOP,KAAP;AACD;AAED,OAAO,SAASc,gBAAT,GAA4B;AACjC,QAAMF,QAAQ,GAAGpB,UAAU,CAACiB,oBAAD,CAA3B;;AACA,MAAI,CAACG,QAAL,EAAe;AACb,UAAM,IAAIL,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,SAAOK,QAAP;AACD;AAED,OAAO,MAAMG,QAAQ,GAAGrB,qBAAqB,CAAC,WAAD,EAAcD,GAAG,CAACsB,QAAlB,CAAtC;AACP,OAAO,MAAMC,OAAO,GAAGtB,qBAAqB,CAAC,UAAD,EAAaD,GAAG,CAACuB,OAAjB,CAArC","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\nimport * as api from \"./api\";\nimport createAsyncDispatcher, { initialAsynState } from \"./asyncActionUtils\";\n\nconst initalState = {\n  users: initialAsynState,\n  user: initialAsynState\n};\n\nfunction usersReducer(state, action) {\n  switch (action.type) {\n    case \"GET_USERS\":\n      return {\n        ...state,\n        users: loadingState\n      };\n    case \"GET_USERS_SUCCESS\":\n      return {\n        ...state,\n        users: success(action.data)\n      };\n    case \"GET_USERS_ERROR\":\n      return {\n        ...state,\n        users: error(action.error)\n      };\n    case \"GET_USER\":\n      return {\n        ...state,\n        user: loadingState\n      };\n    case \"GET_USER_SUCCESS\":\n      return {\n        ...state,\n        user: success(action.data)\n      };\n    case \"GET_USER_ERROR\":\n      return {\n        ...state,\n        user: error(action.error)\n      };\n\n    default:\n      throw new Error(`UnHandled action type ${action.type}`);\n  }\n}\n\nconst UsersStateContext = createContext(null);\nconst USersDispatchContext = createContext(null);\n\nexport function UsersProvider({ children }) {\n  const [state, dispatch] = useReducer(usersReducer, initalState);\n  return (\n    <UsersStateContext.Provider value={state}>\n      <USersDispatchContext.Provider value={dispatch}>\n        {children}\n      </USersDispatchContext.Provider>\n    </UsersStateContext.Provider>\n  );\n}\n\nexport function useUsersState() {\n  const state = useContext(UsersStateContext);\n  if (!state) {\n    throw new Error(\"Cannot find UserProvider\");\n  }\n  return state;\n}\n\nexport function useUsersDispatch() {\n  const dispatch = useContext(USersDispatchContext);\n  if (!dispatch) {\n    throw new Error(\"Cannot find UserProvider\");\n  }\n  return dispatch;\n}\n\nexport const getUsers = createAsyncDispatcher(\"GET_USERS\", api.getUsers);\nexport const getUser = createAsyncDispatcher(\"GET_USER\", api.getUser);\n"]},"metadata":{},"sourceType":"module"}