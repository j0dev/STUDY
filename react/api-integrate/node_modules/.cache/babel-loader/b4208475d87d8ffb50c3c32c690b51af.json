{"ast":null,"code":"var _jsxFileName = \"/Users/j0dev/Desktop/j0dev/Study/react/api-integrate/src/Users.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Users() {\n  const [users, setUsers] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchUsers = async () => {\n    try {\n      setUsers(null);\n      setError(null);\n      setLoading(true);\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n      setUsers(res.data);\n    } catch (e) {\n      setError(e);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }, \"loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Error occured\");\n  if (!users) return null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(\"li\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, user.name, \" (\", user.username, \")\"))), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Re-Loading\"));\n}\n\nexport default Users;","map":{"version":3,"sources":["/Users/j0dev/Desktop/j0dev/Study/react/api-integrate/src/Users.js"],"names":["React","useState","useEffect","axios","Users","users","setUsers","loading","setLoading","error","setError","fetchUsers","res","get","data","e","map","user","id","name","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,UAAU,GAAG,YAAY;AAC7B,QAAI;AACFL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMI,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,4CAAV,CAAlB;AACAP,MAAAA,QAAQ,CAACM,GAAG,CAACE,IAAL,CAAR;AACD,KAND,CAME,OAAOC,CAAP,EAAU;AACVL,MAAAA,QAAQ,CAACK,CAAD,CAAR;AACD;;AACDP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAXD;;AAaAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIJ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACX,MAAI,CAACJ,KAAL,EAAY,OAAO,IAAP;AAEZ,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACW,GAAN,CAAUC,IAAI,iBACb;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,IADR,QACgBF,IAAI,CAACG,QADrB,MADD,CADH,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CADF;AAYD;;AAED,eAAehB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Users() {\n  const [users, setUsers] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchUsers = async () => {\n    try {\n      setUsers(null);\n      setError(null);\n      setLoading(true);\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n      setUsers(res.data);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  if (loading) return <div>loading...</div>;\n  if (error) return <div>Error occured</div>;\n  if (!users) return null;\n\n  return (\n    <>\n      <ul>\n        {users.map(user => (\n          <li key={user.id}>\n            {user.name} ({user.username})\n          </li>\n        ))}\n      </ul>\n      <button>Re-Loading</button>\n    </>\n  );\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}